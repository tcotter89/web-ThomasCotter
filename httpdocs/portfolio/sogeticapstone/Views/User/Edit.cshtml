@model BootcampCapstone.User

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    <div class="container centered">
        <div class="form-generic">
            <h2 class="form-generic-heading">Edit Account Info</h2>
            <fieldset class="form-generic-column">
                @Html.HiddenFor(model => model.userID)
                <div class="form-line">
                    @Html.LabelFor(model => model.username)
                </div>
                <div class="form-line">
                    @Html.EditorFor(model => model.username)
                </div>
                <div class="form-line">
                    @Html.ValidationMessageFor(model => model.username)
                </div>
                <div class="form-line">
                    @Html.LabelFor(model => model.password)
                </div>
                <div class="form-line">
                    @Html.PasswordFor(model => model.password)
                </div>
                <div class="form-line">
                    @Html.ValidationMessageFor(model => model.password)
                </div>
                <div class="form-line">
                    @Html.LabelFor(model => model.firstName)
                </div>
                <div class="form-line">
                    @Html.EditorFor(model => model.firstName)
                </div>
                <div class="form-line">
                    @Html.ValidationMessageFor(model => model.firstName)
                </div>
                <div class="form-line">
                    @Html.LabelFor(model => model.lastName)
                </div>
                <div class="form-line">
                    @Html.EditorFor(model => model.lastName)
                </div>
                <div class="form-line">
                    @Html.ValidationMessageFor(model => model.lastName)
                </div>
                <div class="form-line">
                    @Html.LabelFor(model => model.address1)
                </div>
                <div class="form-line">
                    @Html.EditorFor(model => model.address1)
                </div>
                <div class="form-line">
                    @Html.ValidationMessageFor(model => model.address1)
                </div>
                <div class="form-line">
                    @Html.LabelFor(model => model.address2)
                </div>
                <div class="form-line">
                    @Html.EditorFor(model => model.address2)
                </div>
                <div class="form-line">
                    @Html.ValidationMessageFor(model => model.address2)
                </div>
                <div class="form-line">
                    @Html.LabelFor(model => model.city)
                </div>
                <div class="form-line">
                    @Html.EditorFor(model => model.city)
                </div>
                <div class="form-line">
                    @Html.ValidationMessageFor(model => model.city)
                </div>
                <div class="form-line">
                    <div class="form-line-double-left">
                        @Html.LabelFor(model => model.state)
                        @Html.EditorFor(model => model.state)
                        @Html.ValidationMessageFor(model => model.state)
                    </div>
                    <div class="form-line-double-right">
                        @Html.LabelFor(model => model.zip)
                        @Html.EditorFor(model => model.zip)
                        @Html.ValidationMessageFor(model => model.zip)
                    </div>
                </div>
            </fieldset> <!-- form-generic-column -->
            <fieldset class ="form-generic-column">
                <div class="form-line">
                    @Html.LabelFor(model => model.phoneHome)
                </div>
                <div class="form-line">
                    @Html.EditorFor(model => model.phoneHome)
                </div>
                <div class="form-line">
                    @Html.ValidationMessageFor(model => model.phoneHome)
                </div>
                <div class="form-line">
                    @Html.LabelFor(model => model.phoneCell)
                </div>
                <div class="form-line">
                    @Html.EditorFor(model => model.phoneCell)
                </div>
                <div class="form-line">
                    @Html.ValidationMessageFor(model => model.phoneCell)
                </div>
                <div class="form-line">
                    @Html.LabelFor(model => model.phoneOffice)
                </div>
                <div class="form-line">
                    @Html.EditorFor(model => model.phoneOffice)
                </div>
                <div class="form-line">
                    @Html.ValidationMessageFor(model => model.phoneOffice)
                </div>
                <div class="form-line">
                    @Html.LabelFor(model => model.companyName)
                </div>
                <div class="form-line">
                    @Html.EditorFor(model => model.companyName)
                </div>
                <div class="form-line">
                    @Html.ValidationMessageFor(model => model.companyName)
                </div>
                <div class="form-line">
                    @Html.LabelFor(model => model.branchLocation)
                </div>
                <div class="form-line">
                    @Html.EditorFor(model => model.branchLocation)
                </div>
                <div class="form-line">
                    @Html.ValidationMessageFor(model => model.branchLocation)
                </div>
                <div class="form-line">
                    @Html.LabelFor(model => model.foodID, "Food")
                </div>
                <div class="form-line">
                    @Html.DropDownList("foodID", String.Empty)
                </div>
                <div class="form-line">
                    @Html.ValidationMessageFor(model => model.foodID)
                </div>
                <div class="form-line">
                    @Html.LabelFor(model => model.additionalInfo)
                </div>
                <div class="form-line">
                    @Html.TextAreaFor(model => model.additionalInfo, new { @rows = "2" })
                </div>
                <div class="form-line">
                    @Html.ValidationMessageFor(model => model.additionalInfo)
                </div>
                <input type="submit" value="Save" class="btn btn-large btn-primary right-spacing-small" />
                <input type="button" value="Cancel" class="btn btn-large btn-primary" onclick="@("location.href='" + Url.Action("Details", "User", new { id=Model.userID }) + "'")" />
            </fieldset> <!-- form-generic-column -->
        </div> <!-- /form-generic -->
    </div> <!-- container -->
}

<div class="hidden">
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
